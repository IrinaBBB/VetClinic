<!-- Sidebar -->
<ul class="navbar-nav sidebar sidebar-dark accordion" id="accordionSidebar">

    <!-- Sidebar - Brand -->
    <a class="sidebar-brand d-flex align-items-center justify-content-center" href="">
        <div class="sidebar-brand-icon rotate-n-15">
            <img src="img/pet.svg"/ width="50px">
        </div>
        <div class="sidebar-brand-text mx-3">Vet Clinic</div>
    </a>

    <!-- Divider -->
    <hr class="sidebar-divider my-0">

    <!-- Nav Item - Dashboard -->
    <li class="nav-item">
        <NavLink class="nav-link" href="/dashboard" Match="NavLinkMatch.All">
            <i class="fas fa-fw fa-tachometer-alt"></i>
            <span>Dashboard</span>
        </NavLink>
    </li>

   
       
    <!-- Divider -->
    <hr class="sidebar-divider d-none d-md-block">

    <!-- Nav Item - Animals -->
    <li class="nav-item">
        <NavLink class="nav-link" href="pets">
            <i class="fas fa-fw fa-paw"></i>
            <span>Pets</span>
        </NavLink>
    </li>

    <!-- Nav Item - Owners -->
    <li class="nav-item">
        <NavLink class="nav-link" href="owners">
            <i class="fas fa-fw fa-users"></i>
            <span>Owners</span>
        </NavLink>
    </li>

    <!-- Nav Item - Medical Personel -->
    <li class="nav-item">
        <NavLink class="nav-link" href="vets">
            <i class="fas fa-fw fa-briefcase-medical"></i>
            <span>Vets</span>
        </NavLink>
    </li>

    <!-- Divider -->
    <hr class="sidebar-divider d-none d-md-block">


    <!-- Sidebar Toggler (Sidebar) -->
    <div class="text-center d-none d-md-inline">
        <button class="rounded-circle border-0" id="sidebarToggle"></button>
    </div>

</ul>
<!-- End of Sidebar -->




@code {

    [Inject]
    NavigationManager NavigationManager { get; set; }

    protected override void OnInitialized() => NavigationManager.LocationChanged += (s, e) => StateHasChanged();

    bool IsActive(string href, NavLinkMatch navLinkMatch = NavLinkMatch.Prefix)
    {
        var relativePath = NavigationManager.ToBaseRelativePath(NavigationManager.Uri).ToLower();
        return navLinkMatch == NavLinkMatch.All ? relativePath == href.ToLower() : relativePath.StartsWith(href.ToLower());
    }

    string GetActive(string href, NavLinkMatch navLinkMatch = NavLinkMatch.Prefix) => IsActive(href, navLinkMatch) ? "active" : "";
}

