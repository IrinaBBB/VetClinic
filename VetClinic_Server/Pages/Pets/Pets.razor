@page "/pets"

@inject IDbContextFactory<VetClinicDbContext> ContextFactory

<div class="d-flex justify-content-between col-12 mb-3">
    <h1 class="h3 mb-0 text-gray-800">Pets</h1>
    <a href="/animals/create" class="btn btn-primary btn-icon-split">
        <span class="icon text-white-50">
            <i class="fas fa-plus"></i>
        </span>
        <span class="text">Add a new patient</span>
    </a>
</div>

@if (PetList is null)
{
    <div class="col-12">Loading ...</div>
} else
{
    <table class="table table-striped table-light col-12">
        <thead class="thead-dark">
            <tr>
                <th>Name</th>
                <th>Species</th>
                <th>Neutered</th>
                <th>Sex</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var pet in PetList)
            {
                <tr>
                    <td>@pet.Name</td>
                    <td>@pet.Species?.Name</td>
                    <td>@pet.IsNeutered</td>
                    <td>@pet.Sex</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Pet[]? PetList { get; set; }


    protected override async Task OnInitializedAsync()
    {
        using var context = ContextFactory.CreateDbContext();
        PetList = await context.Pets.Include(e => e.Species).ToArrayAsync();
    }
}
