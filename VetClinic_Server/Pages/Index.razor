@page "/dashboard"
@using Microsoft.AspNetCore.Identity
@using VetClinic_Server.Services

@inject NavigationManager NavigationManager
@inject IDbContextFactory<VetClinicDbContext> ContextFactory
@inject IJSRuntime JS
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<AppUser> UserManager
@inject StateContainer StateContainer




@code {

    private AuthenticationState? AuthenticationState { get; set; }
    private AppUser? AppUser { get; set; }
    private bool IsAdmin { get; set; }
    private bool IsVet { get; set; }
    private bool IsOwner { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userEmail = AuthenticationState?.User.Identity?.Name;
        AppUser = await UserManager.Users.Include(u => u.Vet).FirstOrDefaultAsync(u => u.Email == userEmail);

        if (AppUser != null)
        {
            var roles = await UserManager.GetRolesAsync(AppUser);
            IsAdmin = roles.Contains("Admin");
            IsVet = roles.Contains("Vet");
            IsOwner = roles.Contains("Owner");
        }

        if (IsVet)
        {
            NavigationManager.NavigateTo("/vets/main");
        }

        if (IsOwner)
        {
            NavigationManager.NavigateTo("/owners/main");
        }

        if (IsAdmin)
        {
            NavigationManager.NavigateTo("/admin/main");
        }
    }
}