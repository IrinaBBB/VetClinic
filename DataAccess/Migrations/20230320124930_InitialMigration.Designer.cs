// <auto-generated />
using System;
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230320124930_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.Entities.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Chipped")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DateOfBirthIsKnown")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EscapeAttempts")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Neutered")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Sex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("WeightInKilos")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Chipped = 0,
                            CreatedBy = "Anna Bergsson",
                            DateOfBirthIsKnown = false,
                            DateRegistered = new DateTime(2023, 3, 20, 12, 49, 29, 688, DateTimeKind.Utc).AddTicks(4331),
                            EscapeAttempts = 0,
                            Name = "Lad",
                            Neutered = 0,
                            Sex = 1,
                            SpeciesId = 2,
                            WeightInKilos = 3m
                        },
                        new
                        {
                            Id = 2,
                            Chipped = 1,
                            CreatedBy = "Anna Bergsson",
                            DateOfBirth = new DateTime(2023, 3, 20, 13, 49, 29, 688, DateTimeKind.Local).AddTicks(7089),
                            DateOfBirthIsKnown = true,
                            DateRegistered = new DateTime(2023, 3, 20, 12, 49, 29, 688, DateTimeKind.Utc).AddTicks(7026),
                            EscapeAttempts = 0,
                            Name = "Inka",
                            Neutered = 1,
                            Sex = 2,
                            SpeciesId = 1,
                            WeightInKilos = 2m
                        },
                        new
                        {
                            Id = 3,
                            Chipped = 0,
                            CreatedBy = "Anna Bergsson",
                            DateOfBirthIsKnown = false,
                            DateRegistered = new DateTime(2023, 3, 20, 12, 49, 29, 691, DateTimeKind.Utc).AddTicks(8243),
                            EscapeAttempts = 0,
                            Name = "Dundy",
                            Neutered = 0,
                            Sex = 0,
                            SpeciesId = 3,
                            WeightInKilos = 0m
                        },
                        new
                        {
                            Id = 4,
                            Chipped = 0,
                            CreatedBy = "Anna Bergsson",
                            DateOfBirthIsKnown = false,
                            DateRegistered = new DateTime(2023, 3, 20, 12, 49, 29, 691, DateTimeKind.Utc).AddTicks(8253),
                            EscapeAttempts = 0,
                            Name = "Urshy",
                            Neutered = 0,
                            Sex = 1,
                            SpeciesId = 1,
                            WeightInKilos = 5m
                        },
                        new
                        {
                            Id = 5,
                            Chipped = 2,
                            CreatedBy = "Anna Bergsson",
                            DateOfBirth = new DateTime(2023, 3, 20, 13, 49, 29, 691, DateTimeKind.Local).AddTicks(8256),
                            DateOfBirthIsKnown = true,
                            DateRegistered = new DateTime(2023, 3, 20, 12, 49, 29, 691, DateTimeKind.Utc).AddTicks(8255),
                            EscapeAttempts = 6,
                            Name = "Sebastian",
                            Neutered = 2,
                            Sex = 1,
                            SpeciesId = 2,
                            WeightInKilos = 9m
                        },
                        new
                        {
                            Id = 6,
                            Chipped = 2,
                            CreatedBy = "Anna Bergsson",
                            DateOfBirth = new DateTime(2023, 3, 20, 13, 49, 29, 691, DateTimeKind.Local).AddTicks(8298),
                            DateOfBirthIsKnown = true,
                            DateRegistered = new DateTime(2023, 3, 20, 12, 49, 29, 691, DateTimeKind.Utc).AddTicks(8297),
                            EscapeAttempts = 0,
                            Name = "Jessie",
                            Neutered = 1,
                            Sex = 2,
                            SpeciesId = 1,
                            WeightInKilos = 2m
                        },
                        new
                        {
                            Id = 7,
                            Chipped = 1,
                            CreatedBy = "Anna Bergsson",
                            DateOfBirth = new DateTime(2023, 3, 20, 13, 49, 29, 691, DateTimeKind.Local).AddTicks(8304),
                            DateOfBirthIsKnown = true,
                            DateRegistered = new DateTime(2023, 3, 20, 12, 49, 29, 691, DateTimeKind.Utc).AddTicks(8303),
                            EscapeAttempts = 3,
                            Name = "Quiffy",
                            Neutered = 1,
                            Sex = 2,
                            SpeciesId = 2,
                            WeightInKilos = 3m
                        },
                        new
                        {
                            Id = 8,
                            Chipped = 2,
                            CreatedBy = "Anna Bergsson",
                            DateOfBirthIsKnown = false,
                            DateRegistered = new DateTime(2023, 3, 20, 12, 49, 29, 691, DateTimeKind.Utc).AddTicks(8306),
                            EscapeAttempts = 0,
                            Name = "Woffy",
                            Neutered = 1,
                            Sex = 1,
                            SpeciesId = 2,
                            WeightInKilos = 4m
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Cat is a domestic species of small carnivorous mammal.",
                            Name = "Cat"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Dog is is a domesticated descendant of the wolf. Also called the domestic dog, it is derived from the extinct Pleistocene wolf, and the modern wolf is the dog's nearest living relative.",
                            Name = "Dog"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Fish are aquatic, craniate, gill-bearing animals that lack limbs with digits. Included in this definition are the living hagfish, lampreys, and cartilaginous and bony fish as well as various extinct related groups.",
                            Name = "Fish"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Animal", b =>
                {
                    b.HasOne("DataAccess.Entities.Species", "Species")
                        .WithMany("Animals")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Species");
                });

            modelBuilder.Entity("DataAccess.Entities.Species", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
