@page "/owners"

@page "/owners/{currentPage:int?}"

@inject NavigationManager NavigationManager
@inject IDbContextFactory<VetClinicDbContext> ContextFactory

<PageTitle>Create a Vet</PageTitle>
<div class="d-flex justify-content-between col-12 mb-3">
    <h1 class="h3 mb-0 text-gray-800">Owners</h1>
    <a href="/animals/create" class="btn btn-primary btn-icon-split">
        <span class="icon text-white-50">
            <i class="fas fa-plus"></i>
        </span>
        <span class="text">Add a new patient</span>
    </a>
</div>

@if (OwnerList is null)
{
    <div class="col-12">Loading ...</div>
} else
{
    <table class="table table-striped table-light col-12" style="min-height: 294px;">
        <thead class="thead-dark">
            <tr>
                <th>Firstname</th>
                <th>Lastname</th>
                <th>Email</th>
                <th>Phone</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var owner in OwnerList)
            {
                <tr>
                    <td>@owner.FirstName</td>
                    <td>@owner.LastName</td>
                    <td>@owner.Email</td>
                    <td>@owner.PhoneNumber</td>
                    <td class="text-center">
                        <a href="/owners/details/@owner.Id" class="btn btn-secondary btn-circle mr-2">
                            <i class="fas fa-info"></i>
                        </a>
                        <a href="/owners/edit/@owner.Id" class="btn btn-secondary btn-circle mr-2">
                            <i class="fas fa-edit"></i>
                        </a>
                        <a href="/owners/delete/@owner.Id" class="btn btn-secondary btn-circle">
                            <i class="fas fa-trash"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav aria-label="Pagintaion" class="w-100">
        <ul class="pagination justify-content-end">
            <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="/owners/@(CurrentPage - 1)">Previous</a>
            </li>
            @for (int i = 1; i <= TotalPages; i++)
            {
                <li class="page-item @(CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="/owners/@i">@i</a>
                </li>
            }
            <li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
                <a class="page-link" href="/owners/@(CurrentPage + 1)">Next</a>
            </li>
        </ul>
    </nav>
}

@code {
    [Parameter]
    public int? CurrentPage { get; set; }

    private Owner[]? OwnerList { get; set; }
    private int TotalPages { get; set; }

    private const int ItemsPerPage = 5;

    protected override async Task OnParametersSetAsync()
    {
        if (CurrentPage is null or < 1)
        {
            NavigationManager.NavigateTo("owners/1");
            return;
        }
        using var context = ContextFactory.CreateDbContext();

        var ownersCount = await context.Owners.CountAsync();
        TotalPages = ownersCount == 0 ? 1 : (int)Math.Ceiling((double)ownersCount / ItemsPerPage);

        var itemsToSkip = (CurrentPage.Value - 1) * ItemsPerPage;

        if (CurrentPage > TotalPages)
        {
            NavigationManager.NavigateTo($"owners/{TotalPages}");
            return;
        }

        OwnerList = await context.Owners
            .Skip(itemsToSkip)
            .Take(ItemsPerPage)
            .ToArrayAsync();
    }
}

