@page "/vets/details/{VetId:int}"
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation


<div class="px-10 bg-slate-50 mx-6">
	<div class="shadow bg-white rounded p-10">
		<div class="flex items-center mb-7">
			<img src="img/vet _cross.svg" class="w-10 me-1" alt="vet icon"/>
			<h1 class="text-xl font-bold uppercase text-slate-700">Vet Details</h1>
		</div>
		@*Important with '?'*@
		<div class="flex items-center mb-2">
			<span class="text-xl font-bold uppercase text-lime-500 me-2">name:</span>
			<span class="text-xl font-bold uppercase text-slate-700">@Vet?.Name</span>
		</div>
		<div class="flex items-center mb-2">
			<span class="text-xl font-bold uppercase text-lime-500 me-2">age:</span>
			<span class="text-xl font-bold uppercase text-slate-700">@Vet?.Age</span>
		</div>
		<div class="flex items-center mb-2">
			<span class="text-xl font-bold uppercase text-lime-500 me-2">date of graduation:</span>
			<span class="text-xl font-bold uppercase text-slate-700">@Vet?.DateOfGraduation?.ToString("dd.MM.yyyy")</span>
		</div>
		<div class="mb-2">
			<span class="text-xl font-bold uppercase text-lime-500 me-4">specializations:</span>
			@for (var i = 0; i < Vet?.Specializations.Count; i++)
			{
				if (Vet?.Specializations.ElementAt(i).Name.ToLower() != "unknown")
				{
					if (Vet?.Specializations.ElementAt(i).Name.ToLower() == "cat")
					{
						<span class="bg-teal-200 text-teal-600 py-1 px-3 rounded-full text-xs me-3">@Vet?.Specializations.ElementAt(i).Name</span>
					}
					else if (Vet?.Specializations.ElementAt(i).Name.ToLower() == "dog")
					{
						<span class="bg-fuchsia-200 text-fuchsia-600 py-1 px-3 rounded-full text-xs me-3">@Vet?.Specializations.ElementAt(i).Name</span>
					}
					else
					{
						<span class="bg-yellow-200 text-yellow-600 py-1 px-3 rounded-full text-xs me-3">@Vet?.Specializations.ElementAt(i).Name</span>
					}
				}
			}
		</div>
		<div class="flex items-center mb-2">
			<span class="text-xl font-bold uppercase text-lime-500 me-2">Visits:</span>
		</div>
		<table class="min-w-max w-full table-auto">
			<thead>
			<tr class="bg-gray-200 text-gray-600 uppercase text-sm leading-normal">
				<th class="py-3 px-6 text-left">Animal Name</th>
				<th class="py-3 px-6 text-left">Species</th>
				<th class="py-3 px-6 text-left">Visit Date and Time</th>
				<th class="py-3 px-6 text-center">Details</th>
				<th class="py-3 px-6 text-center">&nbsp;</th>
			</tr>
			</thead>
			<tbody class="text-gray-600 text-sm font-light">
			@for (var i = 0; i < Visits?.Count; i++)
			{
				<tr class="border-b border-gray-200 hover:bg-gray-100 odd:bg-white even:bg-slate-50">
					<td class="py-3 px-6 text-left whitespace-nowrap">
						<div class="flex items-center font-weight-bold text-lg">
							@Visits?.ElementAt(i).Animal.Name
						</div>
					</td>
					<td class="py-3 px-6 text-left whitespace-nowrap">
						<div class="flex items-center font-weight-bold text-lg">
							@Visits?.ElementAt(i).Animal.Species.Name
						</div>
					</td>
					<td class="py-3 px-6 text-left whitespace-nowrap">
						<div class="flex items-center font-weight-bold text-lg">
							@Visits?.ElementAt(i).VisitDateTime
						</div>
					</td>
					<td class="py-3 px-6 text-left whitespace-nowrap">
						<div class="flex items-center font-weight-bold text-lg">
							@Visits?.ElementAt(i).Details
						</div>
					</td>
					<td class="py-3 px-6 text-center">
						<div class="flex item-center justify-center">
							<a href="@($"visits/details/{Visits?.ElementAt(i).Id}")" class="w-6 mr-2 transform hover:text-lime-500 hover:scale-110 cursor-pointer">
								<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
								</svg>
							</a>
							<a href="@($"visits/edit/{Visits?.ElementAt(i).Id}")" class="w-6 mr-2 transform hover:text-lime-500 hover:scale-110 cursor-pointer">
								<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"/>
								</svg>
							</a>
							<div class="w-6 mr-2 transform hover:text-lime-500 hover:scale-110 cursor-pointer">
								<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
								</svg>
							</div>
						</div>
					</td>
				</tr>
			}
			</tbody>
		</table>
	</div>

</div>

@code {

	[Parameter]
	public int? VetId { get; set; }

	public Vet Vet { get; set; }
	public ICollection<Visit> Visits { get; set; }


	protected override async Task OnInitializedAsync()
	{
		Vet = await DbContext.Vets
			.Where(x => x.Id == VetId)
			.Include(x => x.Specializations)
			.FirstOrDefaultAsync();
		if (Vet == null)
		{
			Navigation.NavigateTo("/notFound");
		}

		Visits = await DbContext.Visits
			.Where(x => x.VetId == VetId)
			.Include(x => x.Animal)
			.ThenInclude(x => x.Species)
			.ToListAsync();
	}

}